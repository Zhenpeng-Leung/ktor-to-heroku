plugins {
    id("org.gradle.application")
    id("org.jetbrains.kotlin.jvm").version("1.3.21")
}

repositories {
    maven { url = uri("https://maven.aliyun.com/repository/public") } // 中国阿里云 Maven 镜像仓库
    maven { url = uri("https://dl.bintray.com/kotlin/kotlin-js-wrappers") } // Kotlin CSS 远程仓库
}

dependencies {
    // 必须要引入的Kotlin和Logback
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8") // 使用plugins版本,无需再定义
    implementation("ch.qos.logback:logback-classic:$logbackVersion")
    // 项目需要的工件
    implementation("io.ktor:ktor-server-netty:$ktorVersion") // Netty引擎
    implementation("io.ktor:ktor-html-builder:$ktorVersion") // HTML DSL
    implementation("org.jetbrains:kotlin-css-jvm:$kotlinCssVersion") // CSS DSL
}

application.mainClassName = "leung.sample.ktortoheroku.ApplicationKt" // 主类名.注: Kotlin编译的类默认带有'Kt'.

// 创建FatJar.
tasks.named("jar", Jar.class) {
    manifest.attributes("Main-Class": application.mainClassName) // 设置主类名.
    configurations.runtimeClasspath { // 将依赖打包进jar.
        forEach { from(zipTree(it)) }
    }
}

// 创建一个名为 `stage` 的任务,必须是 `stage`,当 `git push 到 `Heroku` 远程仓库时会触发这个任务
tasks.register("stage") {
    dependsOn("build") // 任务依赖于 `build`,`build` 会编译并触发`jar`打包项目.
}
